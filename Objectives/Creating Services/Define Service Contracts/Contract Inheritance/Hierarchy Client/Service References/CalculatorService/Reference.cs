//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ServiceModel;

namespace Hierarchy_Client.CalculatorService {

    #region Modifications

    [ServiceContract(ConfigurationName="CalculatorService.ISimpleCalculator")]
    public interface ISimpleCalculator {

        [OperationContract]
        Int32 Add(Int32 arg1, Int32 arg2);
    }

    public partial class SimpleCalculatorClient : ClientBase<ISimpleCalculator>, ISimpleCalculator {

        public int Add(int arg1, int arg2) {
            return this.Channel.Add(arg1, arg2);
        }
    }

    #endregion


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculatorService.IScientificCalculator")]
    public interface IScientificCalculator : ISimpleCalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScientificCalculator/Multiply", ReplyAction="http://tempuri.org/IScientificCalculator/MultiplyResponse")]
        int Multiply(int arg1, int arg2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IScientificCalculatorChannel : Hierarchy_Client.CalculatorService.IScientificCalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ScientificCalculatorClient : System.ServiceModel.ClientBase<Hierarchy_Client.CalculatorService.IScientificCalculator>, Hierarchy_Client.CalculatorService.IScientificCalculator {
        
        public ScientificCalculatorClient() {
        }
        
        public ScientificCalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScientificCalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScientificCalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScientificCalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(int arg1, int arg2) {
            return base.Channel.Add(arg1, arg2);
        }
        
        public int Multiply(int arg1, int arg2) {
            return base.Channel.Multiply(arg1, arg2);
        }
    }
}
